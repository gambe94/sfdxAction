name: CI job
on:
  workflow_dispatch:
  push:
    branches:
      - feature/**
      - main
#  pull_request:

env:
  PROD_CONSUMERKEY: ${{ secrets.PROD_CONSUMERKEY }}
  PROD_USERNAME: ${{ secrets.PROD_USERNAME }}
  PROD_ALIAS: "EburyHub"
  SC_ORG_ALIAS: "GABOR_SC"

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Cache scratchOrg cred
        id: cache_scratchOrg_cred
        uses: actions/cache@v3
        with:
          path: |
            cred.json
          key: ${{ github.workspace }}-${{ github.ref }}
      - name: 'Login to scratch org'
        if: needs.init.steps.cache_scratchOrg_cred.outputs.cache-hit == 'true'
        run: |
          echo "WE have cache"


  create_scratch_org:
    needs:
      - init
    if: needs.init.steps.cache_scratchOrg_cred.outputs.cache-hit != 'true'
    uses: gambe94/sfdxAction/.github/workflows/createScratchOrg.yml@main
    with:
      sc_name: ${SC_ORG_ALIAS}
      sc_duration: '2'
    secrets: inherit

  checkOutput:
    runs-on: ubuntu-latest
    needs:
      - init
      - create_scratch_org
    steps:
      - name: Archive credentials
        uses: actions/download-artifact@v3
        with:
          name: scratch-cred
          path: creds

      - name: Validate artifact
        if: always()
        run: |
          pwd
          ls -laR
          cat creds/cred.json

      - name: Validate Job Output
        if: always()
        run: |
          echo ${{ needs.create_scratch_org.outputs.sc_username }}
          echo ${{ needs.create_scratch_org.outputs.sc_password }}
          echo ${{ needs.create_scratch_org.outputs.sc_instanceUrl }}


  dev-flow:
    runs-on: ubuntu-latest
    if: needs.init.steps.cache_scratchOrg_cred.outputs.cache-hit == 'true'
    needs:
      - init
      - create_scratch_org
    container:
      image: docker://gambe94/sfdx:2.0.1
      credentials:
        username: "gambe94"
        password: ${{ secrets.DOCKER_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0


      - name: Login scratch Org
        run: |
          cat cred.json 
          echo ${{ needs.create_scratch_org.outputs.sc_username }}
          echo ${{ needs.create_scratch_org.outputs.sc_password }}
          echo ${{ needs.create_scratch_org.outputs.sc_instanceUrl }}
          
          sfdx force:auth:jwt:grant --clientid $PROD_CONSUMERKEY \
            --jwtkeyfile certificate/server.key \
            --username ${{ needs.create_scratch_org.outputs.sc_username }} \
            --instanceurl ${{ needs.create_scratch_org.outputs.sc_instanceUrl }} \
            --setdefaultdevhubusername \
            --setalias $SC_ORG_ALIAS
          
            echo "Login to $SC_ORG_ALIAS"

      - name: Upload salesforce metadata
        run: sfdx force:source:push
        continue-on-error: true


      - name: Archive credentials
        uses: actions/upload-artifact@v3
        with:
          name: scratch-cred
          path: cred.json

      - name: Generate dif
        env:
          GENERATED_DIFF_FOLDER='generated'
        run: |
          MERGE_BASE=$(git merge-base origin/main"  HEAD);
          sfdx sfpowerkit:project:diff --revisionfrom "${MERGE_BASE}" --revisionto HEAD --output ${GENERATED_DIFF_FOLDER} --generatedestructive
          ls -laR ${GENERATED_DIFF_FOLDER}
        continue-on-error: true

      - name: Run tests
        run: |
          sfdx force:apex:test:run --codecoverage --outputdir=testResult \
            --testlevel=RunLocalTests \
            --resultformat=human \
            --detailedcoverage \
            -u GaborSC
      - name: Archive testResult
        uses: actions/upload-artifact@v3
        with:
          name: testResult
          path: |
            testResult/*junit.xml
            testResult/test-result-*-codecoverage.json
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "testResult/*junit.xml"
