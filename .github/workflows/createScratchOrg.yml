name: Create scratch org
on:
  workflow_dispatch:
    inputs:
      sc_name:
        description: "Scratch Org Name"
        default: "CI"
        required: true
        type: string
      sc_duration:
        description: "Scratch Org Duration"
        default: "2"
        required: true
        type: string

  workflow_call:
    inputs:
      sc_name:
        description: "Scratch Org Name"
        default: "CI"
        required: true
        type: string
      sc_duration:
        description: "Scratch Org Duration"
        default: "2"
        required: true
        type: string
    outputs:
      sc_username:
        description: "Created scratch org username"
        value: ${{ jobs.dev-flow.outputs.sc_username }}
      sc_password:
        description: "Created scratch org password"
        value: ${{ jobs.dev-flow.outputs.sc_password }}
      sc_instanceUrl:
        description: "Created scratch org instanceURL"
        value: ${{ jobs.dev-flow.outputs.sc_instanceUrl }}
jobs:
  create-sratch-org:
    runs-on: ubuntu-latest
    outputs:
      sc_username: ${{ steps.create_scratch_org.outputs.sc_username }}
      sc_password: ${{ steps.create_scratch_org.outputs.sc_password }}
      sc_instanceUrl: ${{ steps.create_scratch_org.outputs.sc_instanceUrl }}

    container:
      image: docker://gambe94/sfdx:2.0.1
      credentials:
        username: "gambe94"
        password: ${{ secrets.DOCKER_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Dump GitHub context
        run: echo '${{ toJSON(github) }}'

      - name: Dump inputs context
        run: echo '${{ toJSON(inputs) }}'

      - name: Encode private key
        run: openssl enc -nosalt -aes-256-cbc -d -in certificate/server.key.enc -out certificate/server.key -base64 -K ${{ secrets.JWT_KEY }} -iv ${{ secrets.JWT_IV }}

      - name: Login production
        env:
          PROD_CONSUMERKEY: ${{ secrets.PROD_CONSUMERKEY }}
          PROD_USERNAME: ${{ secrets.PROD_USERNAME }}
          PROD_ALIAS: "GaborDev"
        run: |
          sfdx force:auth:jwt:grant --clientid $PROD_CONSUMERKEY \
          --jwtkeyfile certificate/server.key \
          --username $PROD_USERNAME \
          --instanceurl https://login.salesforce.com/ \
          --setdefaultdevhubusername \
          --setalias $PROD_ALIAS
          echo "Login to prod"

      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "cred.json"
          json: '{"username": "test-m10pa49u3f7y@example.com", "password": "#rbm8oabsBfxx", "instanceUrl": "https://customer-fun-1356-dev-ed.my.salesforce.com"}'


      - name: Create scratch Org
        id: create_scratch_org
        run: |
          #          sfdx force:org:create --setdefaultusername \
          #            --definitionfile config/project-scratch-def.json \
          #            --durationdays 2 \
          #            --setalias GaborSC
          #
          #          sfdx force:user:password:generate
          #
          #          sfdx force:org:display  --verbose --json | \
          #           jq '{username: .result.username, password: .result.password, instanceUrl: .result.instanceUrl}' > cred.json
          #
             cat cred.json
          
           echo "::set-output name=sc_username::$(cat cred.json | jq '.username')"
           echo "::set-output name=sc_password::$(cat cred.json | jq '.password')"
           echo "::set-output name=sc_instanceUrl::$(cat cred.json | jq '.instanceUrl')"

      - name: Archive credentials
        uses: actions/upload-artifact@v3
        with:
          name: scratch-cred
          path: cred.json




